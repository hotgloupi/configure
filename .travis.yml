language: cpp
cache: apt
before_install:
    - if [ "$TRAVIS_OS_NAME" = linux ]; then
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
        sudo apt-add-repository -y ppa:boost-latest/ppa;
        sudo apt-get update -qq;
      fi
    - if [ "${COVERALLS}" = "true" ]; then
        sudo pip install cpp-coveralls ;
      fi
install:
    - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        if [ "$CXX_COMPILER" = clang++ ]; then sudo apt-get install -qq clang-3.4; fi;
        if [ "$CXX_COMPILER" = g++-4.8 ]; then sudo apt-get install -qq g++-4.8; fi;
        sudo apt-get install libboost1.55-all-dev;
      fi
    - sudo pip install behave
    - $CXX_COMPILER --version
    - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        CXX=$CXX_COMPILER ./bootstrap/unix.sh;
      else
        CXX=$CXX_COMPILER ./bootstrap/osx.sh;
      fi
script:
    - cat cov-int/scm_log.txt || echo "No coverity log"
    - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then
        /tmp/configure build cxx=${CXX_COMPILER} coverage=${COVERALLS} --build;
        export CONFIGURE_EXE=`pwd`/build/bin/configure.exe;
        ${CONFIGURE_EXE} build --build --target check;
        behave test/features  -q -m -k;
      else
        cat cov-int/scm_log.txt ;
      fi
after_success:
    - if [ "${COVERALLS}" = "true" ]; then
        ${GCOV} --version ;
        coveralls --build-root build --gcov ${GCOV} --exclude lua --exclude test --gcov-options '\-lp' ;
      fi
git:
    submodules: true
env:
    global:
        - secure: "IrxBokk6LuQHHGb2Ykyi9AYJnoFwQ9ua4iBQe+nPvjZfKyxoVWyHVI8rn5hbV7PupM6PIMn0hmMXVHsRVH9eWfCTMXr+Qo8zO6B0DNsNRtAnig7ZS3RpO93C/N8rUjrlE3GV6ZyeXHGNj6naSIJtwH//IEMpJNTGrqt9cB9UZbw="
        - CONFIGURE_LIBRARY_DIR=${TRAVIS_BUILD_DIR}/src/lib

matrix:
    include:
        - os: osx
          env: CXX_COMPILER=clang++ COVERALLS=false
        - os: linux
          env: CXX_COMPILER=g++-4.8 COVERALLS=false
        - os: linux
          env: CXX_COMPILER=g++-4.8 GCOV=gcov-4.8 COVERALLS=true

addons:
  coverity_scan:
    project:
      name: "hotgloupi/configure"
      description: "Configure your projects' builds"
    notification_email: raphael.londeix+github@gmail.com
    build_command_prepend: "/tmp/configure build cxx=$CXX_COMPILER"
    build_command: "make -C build"
    branch_pattern: coverity
