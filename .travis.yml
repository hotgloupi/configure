sudo: false
language: cpp
install:
- pip install cpp-coveralls --user
- pip install behave --user
- $CXX_COMPILER --version
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then CXX=$CXX_COMPILER ./bootstrap/unix.sh;
  else CXX=$CXX_COMPILER ./bootstrap/osx.sh; fi
script:
- cat cov-int/scm_log.txt || echo "No coverity log"
- if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then /tmp/configure build cxx=${CXX_COMPILER}
  coverage=${COVERALLS} --build -d; export CONFIGURE_EXE=`pwd`/build/bin/configure;
  ${CONFIGURE_EXE} build --build --target check -d; ${BEHAVE_BIN} test/features -q -m -k;
  else cat cov-int/scm_log.txt ; fi
after_success:
- if [ "${COVERALLS}" = "true" ]; then ${GCOV} --version ; ${COVERALLS_BIN} --build-root
  build --gcov ${GCOV} --exclude lua --exclude test --gcov-options '\-lp' ; fi
git:
  submodules: true
env:
  global:
  - secure: IrxBokk6LuQHHGb2Ykyi9AYJnoFwQ9ua4iBQe+nPvjZfKyxoVWyHVI8rn5hbV7PupM6PIMn0hmMXVHsRVH9eWfCTMXr+Qo8zO6B0DNsNRtAnig7ZS3RpO93C/N8rUjrlE3GV6ZyeXHGNj6naSIJtwH//IEMpJNTGrqt9cB9UZbw=
  - CONFIGURE_LIBRARY_DIR=${TRAVIS_BUILD_DIR}/src/lib
  - PYTHONUSERBASE=${HOME}/.local
  - COVERALLS_BIN=${PYTHONUSERBASE}/bin/coveralls
  - BEHAVE_BIN=${PYTHONUSERBASE}/bin/behave

matrix:
  include:
  - os: osx
    env: CXX_COMPILER=clang++ COVERALLS=false
  - os: linux
    env: CXX_COMPILER=g++-4.8 COVERALLS=false
  - os: linux
    env: CXX_COMPILER=g++-4.8 GCOV=gcov-4.8 COVERALLS=true

addons:
  coverity_scan:
    project:
      name: hotgloupi/configure
      description: Configure your projects' builds
    notification_email: raphael.londeix+github@gmail.com
    build_command_prepend: /tmp/configure build cxx=$CXX_COMPILER
    build_command: make -C build
    branch_pattern: coverity
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - boost-latest
    packages:
      - libboost1.55-all-dev
      - g++-4.8
      - g++-4.9
      - g++-5.0
      - clang-3.4

before_deploy:
  - export PACKAGE_NAME=configure-${TRAVIS_OS_NAME}
  - echo "Preparing package ${PACKAGE_NAME}"
  - ./build/bin/configure build --plugin package.archive package-name=${PACKAGE_NAME} --build --target package

deploy:
  provider: releases
  api_key:
    secure: bTYL6YF9l9DMVuIqE2Cujt2meWxn2+l+Svac/NTCsC/KGUfhdXb8oBAFmmYeDLOOddR8oOnBPadpvnHrRtA45ksHlqDqV2HvpqlxMwe4OhJYYoDmCdNWy+Hgf2axkSzKZWXKIiHusY5VnKdGjEQFOuylH/tzE3Bam6kP6evp6g4=
  file: build/${PACKAGE_NAME}.tgz
  skip_cleanup: true
  on:
    repo: hotgloupi/configure
    condition: $COVERALLS = false
    tags: true
    all_branches: true
